name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  PROJECT_NAME: "doc-extractor"
  VERSION: "latest"

jobs:
#   test_check_changes:
  
#     runs-on: unutu-latest
    
#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v2
        
#       - name: Check folder changes
#         id: check-changes
#         run: |
#           changes=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})

#           # Check if the folder has changes
#           if echo "$changes" | grep -q "api/"; then
#             echo "FolderA has changes"
#           fi

  check_changes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        
      - name: Check folder changes
        id: check-changes
        run: |
          default_branch=$(git symbolic-ref --short HEAD)
          changes=$(git diff --name-only $default_branch ${{ github.sha }})
          echo "changes=${changes}" >> $GITHUB_ENV
          if echo "$changes" | grep -q "api/"; then
            echo "FolderA has changes"
          fi

#       - name: Check folder changes
#         id: check-changes
#         run: |
#           changes=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
#           echo "changes=${changes}" >> $GITHUB_ENV
#           if echo "$changes" | grep -q "api/"; then
#             echo "FolderA has changes"
#           fi

  build_and_push:
    needs: check_changes
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - name: API
            folder: api
            image: $DOCKER_USERNAME/$PROJECT_NAME:api-$VERSION
          - name: CLIENT
            folder: client
            image: $DOCKER_USERNAME/$PROJECT_NAME:client-$VERSION

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Docker
        uses: docker/setup-buildx-action@v2
      
      - name: Build Image
        if: contains(needs.check_changes.outputs.changes, matrix.folder)
        run: |
          echo "Run Build Image"
          cd ${{ matrix.folder }}
          docker build -t ${{ matrix.image }} .
      - name: Push Image
        if: contains(needs.check_changes.outputs.chang, matrix.folder)
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push ${{ matrix.image }}
