name: Docker Image CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    
env:
  DOCKER_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_PASSWORD: ${{ secrets.DOCKER_HUB_PASSWORD }}
  PROJECT_NAME: "doc-extractor"
  VERSION: "latest"

jobs:

  check_changes:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        folder_check: [api/, client/]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get folder changes
        id: get-changes-folder
        run: |
          changes=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }})
          echo "changes=${changes}" >> $GITHUB_ENV

        
      - name: Check get change
        run: |
          if echo "$changes" | grep -q "api/"; then
            echo "API has changes"
          fi
          
      - name: Check folder change
        id: check-changes
        run: | 
          if echo "$changes" | grep -q ${{ matrix.folder_check }}; then
            echo "is_changes_$(basename "${{ matrix.folder_check }}")=true" >> $GITHUB_ENV
          fi

  build_and_push:
    needs: check_changes
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        include:
          - name: API
            folder: api
            image: $DOCKER_USERNAME/$PROJECT_NAME:api-$VERSION
          - name: CLIENT
            folder: client
            image: $DOCKER_USERNAME/$PROJECT_NAME:client-$VERSION

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
      
      - name: Setup Docker
        uses: docker/setup-buildx-action@v2
        
      - name: Test check changes
        run: |
          echo "Run list changes: ${{ needs.check_changes.outputs.changes }}"
          echo "Folder: ${{ matrix.folder }}"
          echo "Check API: ${{ needs.check_changes.outputs.is_changes_api }}"
          echo "Check Contain: $ {{ needs.check_changes.outputs.is_changes_${{ matrix.folder }} }}"
      
      - name: Build Image
        if: needs.check_changes.outputs["is_changes_${{ matrix.folder }}"] != null && needs.check_changes.outputs["is_changes_${{ matrix.folder }}"] == 'true'
        run: |
          echo "Run Build Image"
          cd ${{ matrix.folder }}
          docker build -t ${{ matrix.image }} .
      - name: Push Image
        if: contains(needs.check_changes.outputs.chang, matrix.folder)
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker push ${{ matrix.image }}
